name: C++ CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y clang clang-tidy clang-format cmake ninja-build libx11-dev

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install llvm cmake ninja
          echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> $GITHUB_ENV

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v1.1

      - name: Check formatting
        run: clang-format --dry-run --Werror $(find src/ include/ -name '*.cpp' -o -name '*.hpp' -o -name '*.h')
        shell: bash

      - name: Configure project
        run: cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -G Ninja
        shell: bash

      - name: Run clang-tidy
        run: |
          python3 scripts/run-clang-tidy.py -p build -quiet
        shell: bash


      - name: Build
        run: cmake --build build
        shell: bash

